FROM gliderlabs/alpine:3.3

ENV FFMPEG_VERSION=3.0.2
ENV AGGREGATOR ""
ENV APP ""
ENV STREAM ""

#WORKDIR /tmp/ffmpeg

#RUN apk add --update build-base curl nasm tar bzip2 \
#  zlib-dev openssl-dev yasm-dev lame-dev libogg-dev x264-dev libvpx-dev libvorbis-dev x265-dev freetype-dev libass-dev libwebp-dev rtmpdump-dev libtheora-dev opus-dev  && \

#DIR=$(mktemp -d) && cd ${DIR} && \

#  curl -s http://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.gz | tar zxvf - -C . && \
#  cd ffmpeg-${FFMPEG_VERSION} && \
#  ./configure \
#  --enable-version3 --enable-libfaac --enable-gpl --enable-nonfree --enable-small --enable-libmp3lame --enable-libx264 --enable-libx265 --enable-libvpx --enable-libtheora --enable-libvorbis --enable-libopus --enable-libass --enable-libwebp --enable-librtmp --enable-postproc --enable-avresample --enable-libfreetype --enable-openssl --disable-debug && \
#  make && \
#  make install && \
#  make distclean && \

#  rm -rf ${DIR} && \
#  apk del build-base curl tar bzip2 x264 openssl nasm && rm -rf /var/cache/apk/*

# Build dependencies.
RUN apk update && apk add --no-cache \
  binutils \
  binutils-libs \
  build-base \
  ca-certificates \
  gcc \
  libc-dev \
  libgcc \
  make \
  musl-dev \
  openssl \
  openssl-dev \
  pcre \
  pcre-dev \
  pkgconf \
  pkgconfig \
  zlib-dev

# FFmpeg dependencies.
RUN apk add --no-cache --update nasm yasm-dev lame-dev libogg-dev x264-dev libvpx-dev libvorbis-dev x265-dev freetype-dev libass-dev libwebp-dev rtmpdump-dev libtheora-dev opus-dev
RUN echo http://dl-cdn.alpinelinux.org/alpine/edge/testing >> /etc/apk/repositories
RUN apk add --no-cache --update fdk-aac-dev

# Get FFmpeg source.
RUN cd /tmp/ && \
  wget http://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.gz && \
  tar zxf ffmpeg-${FFMPEG_VERSION}.tar.gz && rm ffmpeg-${FFMPEG_VERSION}.tar.gz

# Compile ffmpeg.
RUN cd /tmp/ffmpeg-${FFMPEG_VERSION} && \
  ./configure \
  --enable-version3 \
  --enable-gpl \
  --enable-nonfree \
  --enable-small \
  --enable-libmp3lame \
  --enable-libx264 \
  --enable-libx265 \
  --enable-libvpx \
  --enable-libtheora \
  --enable-libvorbis \
  --enable-libopus \
  --enable-libfdk-aac \
  --enable-libass \
  --enable-libwebp \
  --enable-librtmp \
  --enable-postproc \
  --enable-avresample \
  --enable-libfreetype \
  --enable-openssl \
  --disable-debug && \
  make && make install && make distclean

# Cleanup.
RUN rm -rf /var/cache/* /tmp/*

WORKDIR /app

COPY . /app

ENTRYPOINT ["/app/entrypoint.sh"]

